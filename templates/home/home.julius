let gridOptions = {
  columnDefs: [ ^{itemColumnDefinitions} ],
  rowModelType: 'infinite',
  infiniteInitialRowCount: 1000,
  pagination: true,
  paginationPageSize: 100,
  components: {
    'listCellRenderer': ListCellRenderer
  }
};

function ListCellRenderer() {}

ListCellRenderer.prototype.init = function(params) {
  this.eGui = document.createElement('span');
  this.eGui.innerHTML = params.value.join(', ');
};

ListCellRenderer.prototype.getGui = function() {
  return this.eGui;
}

document.addEventListener('DOMContentLoaded', function() {
  let eGridDiv = document.querySelector('#items-grid');
  new agGrid.Grid(eGridDiv, gridOptions);
  let lastRow = -1;
  let dataSource = {
    getRows: function (params) {
      $.ajax({
        type: 'POST',
        url: 'ajax/getRows',
        dataType: 'text',
        data: {startRow: params.startRow, endRow: params.endRow},
        success: function(rowsThisPageText) {
          let rowsThisPage = eval(rowsThisPageText);
          lastRow += rowsThisPage.length;
          params.successCallback(rowsThisPage, -1);
        }
      })
    }
  };
  gridOptions.api.setDatasource(dataSource);
});
